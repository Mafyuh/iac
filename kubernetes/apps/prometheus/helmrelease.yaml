apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 75.10.0
      interval: 60m
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  values:
    global:
      podAnnotations:
        secret.reloader.stakater.com/reload: prometheus
    crds:
      enabled: true
    alertmanager:
      enabled: false
    kubeApiServer:
      enabled: true
    kubelet:
      enabled: true
    kubeStateMetrics:
      enabled: true
    nodeExporter:
      enabled: true
    grafana:
      enabled: true
      replicas: 1
      forceDeployDashboards: false
      defaultDashboardsEnabled: true
      defaultDashboardsTimezone: America/New_York
      defaultDashboardsEditable: true
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - "grafana.${PUBLIC_DOMAIN}"
        path: /
        tls:
          - secretName: mafyuh-dev-production-tls
            hosts:
              - "grafana.${PUBLIC_DOMAIN}"
      adminPassword: "${GRAF_ADMIN_PASS}"
      persistence:
        enabled: true
        type: sts
        storageClassName: longhorn
        accessModes:
          - ReadWriteOnce
        size: 10Gi
        finalizers:
          - kubernetes.io/pvc-protection

    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - "prometheus.${LOCAL_DOMAIN}"
        pathType: Prefix
        tls:
          - secretName: local-mafyuh-dev-production-tls
            hosts:
              - "prometheus.${LOCAL_DOMAIN}"

      prometheusSpec:
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        replicas: 1
        retention: 14d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 30Gi

        additionalScrapeConfigs: |
          - job_name: 'node_exporter'
            static_configs:
              - targets: ['10.69.69.2:9100'] # Ubu
              - targets: ['10.0.0.15:9100'] # Jellyfin
              - targets: ['10.20.10.20:9100'] # Blocky
              - targets: ['10.69.69.200:9100'] # NPM
              - targets: ['10.69.69.189:9100'] # Kasm
              - targets: ['10.69.69.202:9100'] # Wazuh
              - targets: ['10.69.69.199:9100'] # Umami
              - targets: ['10.20.10.75:9100'] # AI

          - job_name: 'cadvisor'
            static_configs:
              - targets: ['10.69.69.2:9101'] # Ubu
              - targets: ['10.0.0.15:9101'] # Jellyfin
              - targets: ['10.20.10.20:9101'] # Blocky
              - targets: ['10.69.69.200:9101'] # NPM
              - targets: ['10.69.69.189:9101'] # Kasm
              - targets: ['10.69.69.202:9101'] # Wazuh
              - targets: ['10.69.69.199:9101'] # Umami
              - targets: ['10.20.10.75:9101'] # AI

          - job_name: 'speedtest-exporter'
            scrape_interval: 1h
            scrape_timeout: 1m
            static_configs:
              - targets: ['10.69.69.2:9798']

          - job_name: 'ping'
            metrics_path: /probe
            scrape_interval: 5s
            params:
              module: [http_2xx]  # Look for a HTTP 200 response.
            file_sd_configs:
              - files:
                  - pinghosts.yaml
            relabel_configs:
              - source_labels: [__address__]
                regex: '(.*);(.*)'  # first is the url, thus unique for instance
                target_label: instance
                replacement: $1
              - source_labels: [__address__]
                regex: '(.*);(.*)'  # second is humanname to use in charts
                target_label: humanname
                replacement: $2
              - source_labels: [instance]
                target_label: __param_target
              - target_label: __address__
                replacement: 10.69.69.2:9115  

          - job_name: 'blocky'
            static_configs:
              - targets: ['10.20.10.20:4000']

          - job_name: 'pve'
            static_configs:
              - targets:
                - 10.0.0.30  # Proxmox VE node.
                - 10.0.0.3  # Proxmox VE node.
            metrics_path: /pve
            params:
              module: [default]
              cluster: ['1']
              node: ['1']
            relabel_configs:
              - source_labels: [__address__]
                target_label: __param_target
              - source_labels: [__param_target]
                target_label: instance
              - target_label: __address__
                replacement: 10.69.69.2:9221  # PVE exporter.