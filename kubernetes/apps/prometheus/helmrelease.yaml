apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 77.11.1
      interval: 60m
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  values:
    global:
      podAnnotations:
        secret.reloader.stakater.com/reload: prometheus
    
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: true
        configReloaders: true
        general: true
        k8sContainerCpuUsageSecondsTotal: true
        k8sContainerMemoryCache: true
        k8sContainerMemoryRss: true
        k8sContainerMemorySwap: true
        k8sContainerResource: true
        k8sContainerMemoryWorkingSetBytes: true
        k8sPodOwner: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubeControllerManager: true
        kubelet: true
        kubeProxy: false
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        kubeSchedulerAlerting: false
        kubeSchedulerRecording: false
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
        windows: true

    crds:
      enabled: true
    alertmanager:
      enabled: true
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: "n8n"
          routes:
            - receiver: "null"
              match:
                alertname: Watchdog
            - receiver: "null"
              match:
                alertname: InfoInhibitor
            - receiver: "n8n"
              match:
                severity: "critical"
              continue: true
        receivers:
          - name: "null"
          - name: "n8n"
            webhook_configs:
              - url: ${N8N_GOTIFY_ALERTM}
    kubeApiServer:
      enabled: true
    kubelet:
      enabled: true
    kubeStateMetrics:
      enabled: true
    nodeExporter:
      enabled: true
    grafana:
      enabled: true
      replicas: 1
      operator:
        dashboardsConfigMapRefEnabled: true
      forceDeployDashboards: false
      defaultDashboardsEnabled: false
      defaultDashboardsTimezone: America/New_York
      defaultDashboardsEditable: true
      env:
        GF_PANELS_DISABLE_SANITIZE_HTML: "true"
      ingress:
        enabled: false
      adminPassword: "${GRAF_ADMIN_PASS}"
      persistence:
        enabled: true
        type: sts
        storageClassName: longhorn
        accessModes:
          - ReadWriteOnce
        size: 10Gi
        finalizers:
          - kubernetes.io/pvc-protection

    prometheus:
      route:
        main:
          enabled: true
          hostnames: ["{{ .Release.Name }}.local.mafyuh.dev"]
          parentRefs:
            - name: internal
              namespace: kube-system
              sectionName: https

      prometheusSpec:
        enableRemoteWriteReceiver: true
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        configMaps:
          - website-monitoring-targets
        replicas: 1
        retention: 14d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 40Gi

        additionalScrapeConfigs: |
          - job_name: 'speedtest-exporter'
            scrape_interval: 1h
            scrape_timeout: 1m
            static_configs:
              - targets: ['10.69.69.2:9798']

          - job_name: 'ping'
            metrics_path: /probe
            scrape_interval: 5s
            params:
              module: [http_2xx]  # Look for a HTTP 200 response.
            static_configs:
              - targets:
                  - http://www.google.com/;google.com
                  - https://github.com/;github.com
                  - https://www.apple.com/;apple.com
            relabel_configs:
              - source_labels: [__address__]
                regex: '(.*);(.*)'  # first is the url, thus unique for instance
                target_label: instance
                replacement: $1
              - source_labels: [__address__]
                regex: '(.*);(.*)'  # second is humanname to use in charts
                target_label: humanname
                replacement: $2
              - source_labels: [instance]
                target_label: __param_target
              - target_label: __address__
                replacement: blackbox-exporter-prometheus-blackbox-exporter.monitoring.svc.cluster.local:9115

          - job_name: 'website-monitoring-http'
            metrics_path: /probe
            params:
              module: [http_2xx]
            file_sd_configs:
              - files:
                - /etc/prometheus/configmaps/website-monitoring-targets/targets.yml
            relabel_configs:
              - source_labels: [__address__]
                target_label: __param_target
              - source_labels: [__param_target]
                target_label: instance
              - target_label: __address__
                replacement: blackbox-exporter-prometheus-blackbox-exporter:9115
          
          - job_name: "website-monitoring-icmp"
            metrics_path: /probe
            params:
              module: [icmp]
            file_sd_configs:
              - files:
                - /etc/prometheus/configmaps/website-monitoring-targets/targets.yml
            relabel_configs:
              - source_labels: [__address__]
                target_label: __param_target
              - source_labels: [__param_target]
                target_label: instance
              - target_label: __address__
                replacement: blackbox-exporter-prometheus-blackbox-exporter:9115

          - job_name: 'blocky'
            static_configs:
              - targets: ['10.20.10.20:4000']

          - job_name: 'pve'
            static_configs:
              - targets:
                - 10.0.0.30  # Proxmox VE node.
                - 10.0.0.3  # Proxmox VE node.
            metrics_path: /pve
            params:
              module: [default]
              cluster: ['1']
              node: ['1']
            relabel_configs:
              - source_labels: [__address__]
                target_label: __param_target
              - source_labels: [__param_target]
                target_label: instance
              - target_label: __address__
                replacement: 10.69.69.2:9221  # PVE exporter.
          
          - job_name: caddy
            static_configs:
              - targets: ['192.168.2.2:2019']

          - job_name: smokeping-prober
            static_configs:
              - targets: ['10.69.69.2:9374']