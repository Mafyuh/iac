apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prowlarr
  namespace: arr
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  values:
    global:
      fullnameOverride: *app
      namespace: arr

    controllers:
      prowlarr:
        enabled: true
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        replicas: 1

        statefulset:
          volumeClaimTemplates:
            - name: prowlarr-config
              accessMode: ReadWriteOnce
              size: 3Gi
              storageClass: longhorn
              globalMounts:
                - path: /config
        
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: &group 1000
            fsGroup: *group
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/prowlarr
              tag: 1.31.2.4975
              pullPolicy: IfNotPresent
            env:
              TZ: "${TZ}"
              PROWLARR__INSTANCE_NAME: *app
              PROWLARR__PORT: &port 9696
              PROWLARR__APPLICATION_URL: "https://prowlarr.${LOCAL_DOMAIN}"
              PROWLARR__THEME: dark
              PROWLARR__LOG_LEVEL: info

            probes:
              liveness:
                enabled: false

            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL

            resources:
              requests:
                cpu: 50m
                memory: 150Mi
              limits:
                memory: 512Mi

    service:
      app:
        primary: true
        controller: prowlarr
        ports:
          http:
            port: *port

    ingress:
      internal:
        enabled: true
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: "prowlarr.${LOCAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - "prowlarr.${LOCAL_DOMAIN}"
            secretName: local-mafyuh-dev-production-tls

    persistence:
      data:
        enabled: true
        type: nfs
        server: "${NAS_IP}"
        path: /mnt/thePool/thePoolShare
        globalMounts:
          - path: /data
