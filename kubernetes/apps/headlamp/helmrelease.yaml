---
# yaml-language-server: $schema=https://github.com/kubernetes-sigs/headlamp/raw/refs/heads/main/charts/headlamp/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: headlamp
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: headlamp
      version: 0.33.0
      sourceRef:
        kind: HelmRepository
        name: headlamp-chart
        namespace: flux-system
  values:
    podAnnotations:
      reloader.stakater.com/auto: "true"
    replicaCount: 1
    config:
      pluginsDir: /build/plugins

      oidc:
        secret:
          create: false
        clientID: "F0xxCXseO1lSK9iygiJaiFuI0JTuvhQnzRFVwFAa"
        clientSecret: ${DASHBOARD_OIDC_SECRET}
        issuerURL: "https://auth.${PUBLIC_DOMAIN2}/application/o/headlamp/"
        scopes: "email profile"
        useAccessToken: false

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/server-snippet: |-
            large_client_header_buffers 4 64k;
      hosts:
        - host: k3s.${PUBLIC_DOMAIN}
          paths:
          - path: /
            type: ImplementationSpecific
      tls:
        - secretName: mafyuh-dev-production-tls
          hosts:
            - k3s.${PUBLIC_DOMAIN}

    initContainers:
      - command:
          - /bin/sh
          - "-c"
          - |
            kubectl config set-cluster main --server=https://kubernetes.default.svc --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            kubectl config set-credentials main --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
            kubectl config set-context main --cluster=main --user=main
            kubectl config use-context main
        env:
          - name: KUBERNETES_SERVICE_HOST
            value: 10.69.69.10
          - name: KUBERNETES_SERVICE_PORT
            value: "6443"
          - name: KUBECONFIG
            value: /home/headlamp/.config/Headlamp/kubeconfigs/config
        image: bitnami/kubectl:1.33.3
        name: create-kubeconfig
        securityContext:
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 101
          runAsNonRoot: true
          runAsUser: 100
        volumeMounts:
          - mountPath: /home/headlamp/.config/Headlamp/kubeconfigs
            name: kubeconfig
            readOnly: false

      - image: ghcr.io/headlamp-k8s/headlamp-plugin-flux:v0.4.0@sha256:8d14174a166e2ccb2080a9f745b2ce8e19587ff8a2f41753eb1294875e650474
        command:
          - /bin/sh
          - -c
          - mkdir -p /build/plugins && cp -r /plugins/* /build/plugins/
        name: headlamp-plugins
        volumeMounts:
          - mountPath: /build/plugins
            name: headlamp-plugins

    volumeMounts:
      - mountPath: "/home/headlamp/.config/Headlamp/kubeconfigs/"
        name: kubeconfig
        readOnly: true
      - mountPath: /build/plugins
        name: headlamp-plugins
    volumes:
      - name: kubeconfig
        emptyDir: {}
      - name: headlamp-plugins
        emptyDir: {}