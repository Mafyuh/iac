services:
  prometheus:
    image: prom/prometheus:v3.4.2
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - /docker/appdata/prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - grafana

  loki:
    image: grafana/loki:3.5.1
    container_name: loki
    volumes:
      - /docker/appdata/loki:/etc/loki
    ports:
      - "3100:3100"
    restart: unless-stopped
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - grafana

  promtail:
    image: grafana/promtail:3.5.1
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /docker/appdata/promtail:/etc/promtail
    restart: unless-stopped
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - grafana

  ## Exporters
  speedtest-exporter:
    image: ghcr.io/miguelndecarvalho/speedtest-exporter:v3.5.4
    container_name: speedtest-exporter
    environment:
      - TZ=America/New_York
    ports:
      - 9798:9798
    restart: unless-stopped
    networks:
      - grafana

  blackbox-exporter:
    command: --config.file=/config/blackbox.yml
    container_name: blackbox-exporter
    image: quay.io/prometheus/blackbox-exporter:v0.26.0
    volumes:
      - /docker/appdata/blackbox/config:/config
    ports:
      - 9115:9115
    networks:
      - grafana

  prometheus-pve-exporter:
    init: true
    container_name: prometheus-pve-exporter
    environment:
      - PVE_USER=prometheus@pve
      - PVE_PASSWORD=${PVE_PASSWORD}
      - PVE_VERIFY_SSL=false
    ports:
        - 9221:9221
    # volumes:
    #     - /docker/appdata/pve-exporter/pve.yml:/etc/prometheus/pve.yml
    image: prompve/prometheus-pve-exporter:3.5.5
    restart: unless-stopped

  # smokeping_prober:
  #   image: quay.io/superq/smokeping-prober:v0.10.0
  #   container_name: smokeping_prober
  #   privileged: true
  #   environment:
  #     - GOMAXPROCS=1
  #   ports:
  #     - 9374:9374
  #   restart: unless-stopped
  #   command: google.com
  #   networks:
  #     - grafana

  cluster-metrics-api:
    image: mafyuh/metrics-server:1.0.4
    build: .
    ports:
      - "5000:5000"
    restart: unless-stopped

networks:
  grafana:

volumes:
  prom_data:
